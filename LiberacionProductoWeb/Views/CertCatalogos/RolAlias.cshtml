@model LiberacionProductoWeb.Models.CertCatalogosViewModels.RolAliasViewModel;
@using Microsoft.Extensions.Localization;
@using LiberacionProductoWeb.Localize;
@using LiberacionProductoWeb.Helpers;
@using System.Globalization;
@using Microsoft.Extensions.Configuration;
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers
@inject IStringLocalizer<Resource> resource;
@inject IConfiguration Configuration

@{
	ViewData["Title"] = "Funciones - Páises";
	Layout = "~/Views/Shared/_LayoutCatalogs.cshtml";

	var btnFind = resource.GetString("BtnFind");
	var btnFilter = resource.GetString("BtnFilter");
	var lengthMenu = resource.GetString("LengthMenu");
	var searchPlaceholder = resource.GetString("SearchPlaceholder");
	var info = resource.GetString("Info");
	var emptyTable = resource.GetString("EmptyTable");
	var paginatefirst = resource.GetString("Paginatefirst");
	var paginatelast = resource.GetString("Paginatelast");
	var pageNext = resource.GetString("PageNext");
	var pagePreviuos = resource.GetString("PagePreviuos");
	var loadingRecords = resource.GetString("LoadingRecords");
	var processing = resource.GetString("Processing");
	var zeroRecords = resource.GetString("ZeroRecords");
	var infoEmpty = resource.GetString("InfoEmpty");
	var infoFiltered = resource.GetString("InfoFiltered");
}

@* @await Html.PartialAsync("~/Views/Shared/_Navigation.cshtml") *@

<!-- ============================================================== -->
<!-- Page wrapper  -->
<!-- ============================================================== -->
<div id="content" class="content">
	<!-- begin breadcrumb -->
	<ol class="breadcrumb pull-right">
		<li class="breadcrumb-item"><a href="@Url.Action("Access", "Access")">Inicio</a></li>
		<li class="breadcrumb-item"><a href="@Url.Action("Catalogs", "CertCatalogos")">Certificados Catálogos</a></li>
		<li class="breadcrumb-item active">Funciones - Países</li>
	</ol>
	<!-- end breadcrumb -->
	<!-- begin page-header -->
	<h1 class="page-header">Catálogo Funciones - Países</h1>
	<!-- end page-header -->
	@* <div class="section-container section-with-top-border p-b-10">
    <div class="row">
    <div class="col-lg-20">
    <form>
    <div class="row">
    <div class="col-lg-6 m-b-15">
    <div class="m-b-5"><b>Producto:</b></div>
    <select multiple asp-for="SelectedRolAliasFilter" asp-items="Model.RolAliasFilter"
    class="selectpicker show-menu-arrow combobox" data-style="btn-inverse"
    data-live-search="true" title="Selecciona">
    </select>
    </div>
    <div class="col-lg-6 m-b-15">
    <div class="m-b-5"> &nbsp; </div>
    <div class="input-group">
    <button type="submit" class="btn btn-inverse">Buscar</button>
    <a href="@Url.Action("ClearFiltersRolAlias", "CertCatalogos" )" class="btn btn-white m-r-5">
    <i class="fa fa-eraser"></i> Limpiar filtros
    </a>
    </div>
    </div>
    </div>
    </form>
    </div>
    </div>
    </div> *@

	<div class="section-container section-with-top-border p-b-5">
		<div class="row">
			<div class="panel panel-primary">
				<div class="panel-heading">
					<div class="btn-group pull-left">
						<a href="javascript:;" class="waves-effect waves-light btn btn-white m-r-5" id="add-entry">
							<i class="fa fa-plus"></i> Agregar Registro
						</a>
						<a href="javascript:;" class="btn btn-white m-r-5" id="ExporttoExcel">
							<i class="fa fa-file-excel"></i> Exportar a excel
						</a>
					</div>
					<div class="btn-group pull-right">
						<a href="javascript:;" class="btn btn-white m-r-5" id="ClearFilters">
							<i class="fa fa-eraser"></i>Limpiar filtros
						</a>
					</div>
					<h4 class="panel-title">
						&nbsp;
					</h4>
				</div>

				<!-- Mensaje de error -->
				<div class="col-md-12" id="message"></div>

				<div class="panel-body">
					<div>
						<table id="data-table" class="display compact table table-bordered table-hover">
							<thead>
								<tr>
									<th class="no-sort" style="width:1%"></th>
									<th style="white-space: nowrap; display: none;">IdRol</th>
									<th style="white-space: nowrap">Descripción</th>
									<th style="white-space: nowrap">Estatus</th>
									<th style="white-space: nowrap; width:1%"></th>
								</tr>
							</thead>
							<tbody>

								@foreach (var entry in Model.RolList)
								{
									<tr>
										<td></td>
										<td style="display: none;">
											@entry.iD_ROL
										</td>
										<td>
											@entry.descripcion
										</td>
										<td>
											@{
												if (Convert.ToBoolean(entry.iD_STATUS))
												{
													@: Activo
												}
												else
												{
													@: Inactivo
												}
											}
										</td>
										<td>
											<a href="javascript:void(0)" onclick="deleteOnClick(this); return false;" data-id="@entry.iD_ROL" class="btn btn-default btn-xs">
												<i class="fa fa-trash-alt"></i>
											</a>
											<a href='javascript:void(0)' onclick='editOnClick(this);return false;' id='editData' class='btn btn-default btn-xs' data-id='@entry.iD_ROL'>
												<i class='fa fa-edit'></i>
											</a>
										</td>
									</tr>
								}
							</tbody>
						</table>
					</div>
				</div>

				<div class="panel-body" style="display:none;">
					<div>
						<table id="data-table-export-to-excel" class="display compact table table-bordered table-hover">
							<thead>
								<tr>
									<th style="white-space: nowrap">Rol</th>
									<th style="white-space: nowrap">País</th>
									<th style="white-space: nowrap">Descripción</th>
									<th style="white-space: nowrap">Estatus</th>
								</tr>
							</thead>
							<tbody>

								@foreach (var entry in Model.RolAliasExportExcelList)
								{
									<tr>
										<td>
											@{
												foreach (var item in Model.RolList)
												{
													if (item.iD_ROL == entry.iD_ROL)
													{
														@item.descripcion
													}
													else
													{
														@:
													}
												}
											}
										</td>
										<td>
											@{
												foreach (var item in Model.PaisesList)
												{
													if (item.iD_PAIS == entry.iD_PAIS)
													{
														@item.nombre
													}
													else
													{
														@:
													}
												}
											}
										</td>
										<td>
											@entry.descripcion
										</td>
										<td>
											@{
												if (Convert.ToBoolean(entry.iD_STATUS))
												{
													@: Activo
												}
												else
												{
													@: Inactivo
												}
											}
										</td>
									</tr>
								}
							</tbody>
						</table>
					</div>
				</div>
			</div>
		</div>
	</div>
</div>

@section Styles {


	<link href="~/plugins/bootstrap-combobox/css/bootstrap-combobox.css" rel="stylesheet" />
	<link href="~/plugins/bootstrap-select/bootstrap-select.css" rel="stylesheet" />
	<link href="~/plugins/select2/dist/css/select2.min.css" rel="stylesheet" />
	<link href="~/plugins/bootstrap-calendar/css/bootstrap_calendar.css" rel="stylesheet" />


	<link href="~/plugins/DataTables/media/css/dataTables.bootstrap.min.css" rel="stylesheet" />
	<link href="~/plugins/DataTables/extensions/Responsive/css/responsive.bootstrap.min.css" rel="stylesheet" />
	<link href="~/plugins/DataTables/extensions/Buttons/css/buttons.bootstrap.min.css" rel="stylesheet" />

	<link href="~/plugins/gritter/css/jquery.gritter.css" rel="stylesheet" />

	<link href="~/plugins/jquery/jquery.dataTables.min.css" rel="stylesheet" />

}

@section scripts {

	<environment names="Development,Staging,Production">
		<script src="~/plugins/bootstrap-calendar/js/bootstrap_calendar.min.js"></script>

		<script src="~/plugins/gritter/js/jquery.gritter.js"></script>

		<script src="~/plugins/bootstrap-combobox/js/bootstrap-combobox.js"></script>
		<script src="~/plugins/bootstrap-select/bootstrap-select.js"></script>
		<script src="~/plugins/select2/dist/js/select2.min.js"></script>


		<script src="~/plugins/bootstrap-calendar/js/bootstrap_calendar.min.js"></script>

		<script src="~/plugins/DataTables/media/js/dataTables.bootstrap.min.js"></script>

		<script src="~/plugins/DataTables/media/js/jquery.dataTables.js"></script>
		<script src="~/plugins/DataTables/media/js/dataTables.bootstrap.min.js"></script>
		<script src="~/plugins/DataTables/extensions/Responsive/js/dataTables.responsive.min.js"></script>

		<script src="~/plugins/DataTables/extensions/Buttons/js/buttons.html5.min.js"></script>
		<script src="~/plugins/DataTables/extensions/Buttons/js/buttons.print.min.js"></script>
		<script src="~/plugins/DataTables/extensions/Buttons/js/dataTables.buttons.min.js"></script>

		<script src="~/plugins/gritter/js/jquery.gritter.js"></script>
		<script src="~/plugins/bootbox/js/bootbox.all.min.js"></script>

		<script src="~/js/demo.min.js"></script>
		<script src="~/js/apps.min.js"></script>
		<script src="~/js/catalogs.js"></script>
	</environment>



	<script>
		var commonUrl = @Json.Serialize(@Configuration.GetSection("publishUrl").GetSection("commonUrl").Value)

		console.log(commonUrl);

		var pb = {
			base: commonUrl
		};

		$(function () {

			if ('@Model.MensajeError'.length > 1) {
				$('#message').append('<div class="alert alert-danger"> <a class="close" data-dismiss="alert" href="#">&times;</a>@Model.MensajeError </div>');
			}
		});

		$(function () {

			if ('@Model.MensajeInfo'.length > 1) {
				$('#message').append('<div class="alert alert-success"> <a class="close" data-dismiss="alert" href="#">&times;</a>@Model.MensajeInfo </div>');
			}
		});


		var refresh = function () {
			window.location.href = '@Url.Action("RolAlias", "CertCatalogos")';
		}

		var deleteOnClick = function (event) {
			bootbox.confirm({
				message: "¿Deseas eliminar el registro?",
				buttons: {
					confirm: {
						label: 'Si',
						className: 'btn-success'
					},
					cancel: {
						label: 'No',
						className: 'btn-danger'
					}
				},
				callback: function (result) {
					if (result) {
						deleteConfirm(event);
					}
				}
			});
		};

		var deleteOnClickRolAlias = function (event) {
			bootbox.confirm({
				message: "¿Deseas eliminar el registro?",
				buttons: {
					confirm: {
						label: 'Si',
						className: 'btn-success'
					},
					cancel: {
						label: 'No',
						className: 'btn-danger'
					}
				},
				callback: function (result) {
					if (result) {
						deleteConfirmRolAlias(event);
					}
				}
			});
		};

		var deleteConfirm = function (event) {
			var id = $(event).data("id");

			if (id === -1) {
				id = "";
			}

			$.ajax({
				type: "POST",
				url: pb.base + "/CertCatalogos/DeleteRol/" + id,
				dataType: "json",
				success: function (response) {
					if (response.message) {
						$.gritter.add({
							title: "Error",
							text: response.message,
							class_name: "gritter-light"
						})
					} else {
						//sucess add, needs to refresh and show message
						window.location.href = '@Url.Action("RolAlias", "CertCatalogos")';
					}
				},
				failure: function (response) {
					$.gritter.add({
						title: "Error",
						text: "Ocurrio un error, por favor comunicate con el Administrador",
						class_name: "gritter-light"
					})
				}
			});
		}

		var deleteConfirmRolAlias = function (event) {
			var id = $(event).data("id");

			if (id === -1) {
				id = "";
			}

			$.ajax({
				type: "POST",
				url: pb.base + "/CertCatalogos/DeleteRolAlias/" + id,
				dataType: "json",
				success: function (response) {
					if (response.message) {
						$.gritter.add({
							title: "Error",
							text: response.message,
							class_name: "gritter-light"
						})
					} else {
						//sucess add, needs to refresh and show message
						window.location.href = '@Url.Action("RolAlias", "CertCatalogos")';
					}
				},
				failure: function (response) {
					$.gritter.add({
						title: "Error",
						text: "Ocurrio un error, por favor comunicate con el Administrador",
						class_name: "gritter-light"
					})
				}
			});
		}

		@{
			var idTag = "<select id='iD_ROL_ALIAS' class='form-control' data-style='btn-white'  title='Selecciona'>";

			if (Model.RolAliasFilter != null)
			{
				foreach (var item in Model.RolAliasFilter)
				{
					idTag += "<option value='" + item.Value + "'>" + item.Text + "</option>";
				}

				idTag += "</select>";
			}

			var rolTag = "<select id='iD_ROL' class='form-control' data-style='btn-white'  title='Selecciona'>";

			if (Model.RolFilter != null)
			{
				foreach (var item in Model.RolFilter)
				{
					rolTag += "<option value='" + item.Value + "'>" + item.Text + "</option>";
				}

				rolTag += "</select>";
			}

			var paisTag = "<select id='iD_PAIS' class='form-control' data-style='btn-white'  title='Selecciona'>";

			if (Model.PaisesFilter != null)
			{
				foreach (var item in Model.PaisesFilter)
				{
					paisTag += "<option value='" + item.Value + "'>" + item.Text + "</option>";
				}

				paisTag += "</select>";
			}
		}

		var getEditRow = function (Id) {
			var ret = null;
			$.ajax({
				async: false,
				url: pb.base + "/CertCatalogos/GetRolHTMLTagsById/" + Id,
				dataType: "json",
				success: function (data) {
					ret = data.html;
				}
			});

			return ret;
		};

		var getEditRowRolAlias = function (Id) {
			var ret = null;
			$.ajax({
				async: false,
				url: pb.base + "/CertCatalogos/GetRolAliasHTMLTagsById/" + Id,
				dataType: "json",
				success: function (data) {
					ret = data.html;
				}
			});

			return ret;
		};

		var getNewRow = function () {
			var result = "<tr>" +
				"<td> <a href='javascript:void(0)' onclick='removeOnClick(this);return false;'  class='delete-data btn btn-danger btn-xs btn-space' data-id='-1' title='Cancelar'><i class='fa fa-times-circle'></i></a>" +
				"<a href='javascript:void(0)' onclick='saveOnClick(this);return false;' id='saveData' class='save-data btn btn-info btn-xs btn-space' data-id='-1' ><i class='fa fa-save'></i></a> </td>" +
				"<td><input class='form-control' id='descripcion' type='text'></td>" +
				"<td><select id='iD_STATUS' class='form-control'><option value='true'>Activo</option><option value='false'>Inactivo</option></select> </td>" +
				"</tr>"
			return result;
		};

		var getNewRowRolAlias = function (Id) {
			console.log("Entro " + Id);
			var result = "<tr>" +
				"<td> <a href='javascript:void(0)' onclick='removeOnClick(this);return false;'  class='delete-data btn btn-danger btn-xs btn-space' data-id='-1' title='Cancelar'><i class='fa fa-times-circle'></i></a>" +
				"<a href='javascript:void(0)' onclick='saveOnClickRolAlias(this);return false;' id='saveData' class='save-data btn btn-info btn-xs btn-space' data-id='-1' ><i class='fa fa-save'></i></a> </td>" +
				// "<td>@Html.Raw(rolTag)</td>" +
				"<td style='display: none;'><input class='form-control' id='iD_ROL' value='" + Id + "' type='text'></td>" +
				"<td>@Html.Raw(paisTag)</td>" +
				"<td><input class='form-control' maxlength='50' id='descripcion' type='text'></td>" +
				"<td><select id='iD_STATUS' class='form-control'><option value='true'>Activo</option><option value='false'>Inactivo</option></select> </td>" +
				"</tr>"
			return result;
		};

		var removeOnClick = function (event) {
			$(event).closest("tr").remove();
			$("#ExporttoExcel").removeClass("disabled");
			$("#add-entry").removeClass("disabled")
		};

		var isEdit = false;
		var isCreate = false;

		var editOnClick = function (event) {
			var Id = $(event).data("id");

			if (isCreate) {
				return false;
			}

			if (!isEdit) {
				//remueve y pinta los controles
				isEdit = true;
				$("#add-entry").addClass("disabled");
				$("#ExporttoExcel").addClass("disabled");
				$(event).closest("tr").replaceWith(getEditRow(Id));
			}
		};

		var editOnClickRolAlias = function (event) {
			var Id = $(event).data("id");

			if (isCreate) {
				return false;
			}

			if (!isEdit) {
				//remueve y pinta los controles
				isEdit = true;
				$("#add-entry").addClass("disabled");
				$("#ExporttoExcel").addClass("disabled");
				$(event).closest("tr").replaceWith(getEditRowRolAlias(Id));
			}
		};

		var saveConfirm = function (event) {

			if (isEdit) {
				$("#add-entry").removeClass("disabled");
				$("#ExporttoExcel").removeClass("disabled");
			}

			isEdit = false;
			isCreate = false;

			var id = $(event).data("id");

			if (id === -1) {
				id = "";
			}

			var iD_ROL = "";
			var descripcion = "";
			var iD_STATUS = "";

			$(event).closest("tr").each(function () {
				$.each(this.cells, function () {
					//gets values for each cell

					if ($(this).find("#iD_ROL").length) {
						iD_ROL = $(this).find("#iD_ROL").val();
					}

					if ($(this).find("#descripcion").length) {
						descripcion = $(this).find("#descripcion").val();
					}

					if ($(this).find("#iD_STATUS").length) {
						iD_STATUS = $(this).find("#iD_STATUS").val();
					}
				});
			});

			$.ajax({
				type: "POST",
				url: pb.base + "/CertCatalogos/SaveOrEditRol",
				beforeSend: function (xhr) {
					xhr.setRequestHeader("XSRF-TOKEN",
						$('input:hidden[name="__RequestVerificationToken"]').val());
				},
				data: JSON.stringify({
					iD_ROL: String(id),
					descripcion: descripcion,
					iD_STATUS: iD_STATUS
				}),
				contentType: "application/json",
				dataType: "json",
				success: function (response) {
					if (response.message) {
						$.gritter.add({
							title: "Error",
							text: response.message,
							class_name: "gritter-light"
						})
					} else {
						//sucess add, needs to refresh and show message
						window.location.href = '@Url.Action("RolAlias", "CertCatalogos")';
					}
				},
				failure: function (response) {
					//failure, shgow messahe with error
					alert("Fail");
				}
			});
		}

		var saveConfirmRolAlias = function (event) {

			if (isEdit) {
				$("#add-entry").removeClass("disabled");
				$("#ExporttoExcel").removeClass("disabled");
			}

			isEdit = false;
			isCreate = false;

			var id = $(event).data("id");

			if (id === -1) {
				id = "";
			}

			var iD_ROL_ALIAS = "";
			var iD_ROL = "";
			var iD_PAIS = "";
			var descripcion = "";
			var iD_STATUS = "";

			$(event).closest("tr").each(function () {
				$.each(this.cells, function () {
					//gets values for each cell

					if ($(this).find("#iD_ROL_ALIAS").length) {
						iD_ROL_ALIAS = $(this).find("#iD_ROL_ALIAS").val();
					}

					if ($(this).find("#iD_ROL").length) {
						iD_ROL = $(this).find("#iD_ROL").val();
					}

					if($(this).find("#iD_PAIS").length) {
						iD_PAIS= $(this).find("#iD_PAIS").val();
					}

					if ($(this).find("#descripcion").length) {
						descripcion = $(this).find("#descripcion").val();
					}

					if ($(this).find("#iD_STATUS").length) {
						iD_STATUS = $(this).find("#iD_STATUS").val();
					}
				});
			});

			$.ajax({
				type: "POST",
				url: pb.base + "/CertCatalogos/SaveOrEditRolAlias",
				beforeSend: function (xhr) {
					xhr.setRequestHeader("XSRF-TOKEN",
						$('input:hidden[name="__RequestVerificationToken"]').val());
				},
				data: JSON.stringify({
					iD_ROL_ALIAS: String(id),
					iD_ROL: iD_ROL,
					iD_PAIS: iD_PAIS,
					descripcion: descripcion,
					iD_STATUS: iD_STATUS
				}),
				contentType: "application/json",
				dataType: "json",
				success: function (response) {
					if (response.message) {
						$.gritter.add({
							title: "Error",
							text: response.message,
							class_name: "gritter-light"
						})
					} else {
						//sucess add, needs to refresh and show message
						window.location.href = '@Url.Action("RolAlias", "CertCatalogos")';
					}
				},
				failure: function (response) {
					//failure, shgow messahe with error
					alert("Fail");
				}
			});
		}

		var validateForm = function () {
			let descripcion = $("#descripcion").val();

			let isValid = true;
			let errors = [];

			if (!descripcion) {
				errors.push('El campo Descripción es requerido');
				isValid = false;
			}

			if (!isValid) {
				errors.forEach(error => {
					$('#message').append('<div class="alert alert-danger"> <a class="close" data-dismiss="alert" href="#">&times;</a>' + error + '</div>');
				});
			}

			return isValid;
		}

		var saveOnClick = function (event) {
			if (validateForm()) {
				bootbox.confirm({
					message: "¿Deseas guardar los cambios?",
					buttons: {
						confirm: {
							label: 'Si',
							className: 'btn-success'
						},
						cancel: {
							label: 'No',
							className: 'btn-danger'
						}
					},
					callback: function (result) {
						if (result) {
							saveConfirm(event);
						}
					}
				});
			}
		};


		var saveOnClickRolAlias = function (event) {
			bootbox.confirm({
				message: "¿Deseas guardar los cambios?",
				buttons: {
					confirm: {
						label: 'Si',
						className: 'btn-success'
					},
					cancel: {
						label: 'No',
						className: 'btn-danger'
					}
				},
				callback: function (result) {
					if (result) {
						saveConfirmRolAlias(event);
					}
				}
			});
		};

		var tableIdentificator = "";
		var tableDetail = "";

		var addEntryRolAlias = function (event, Id) {
				console.log('Entro Add ' + tableIdentificator);
				//event.preventDefault();
				//$('#addGeneralCatalog').modal('show');
				//$('#data-table tr:eq(1)').after(getNewRowRolAlias(Id));
				$(tableIdentificator + ' tr:eq(1)').after(getNewRowRolAlias(Id));
				$("#ExporttoExcel").addClass("disabled");
				$("#add-entry").addClass("disabled")
				if (!isCreate) {
					isCreate = true;
					$("#ExporttoExcel").addClass("disabled");
					// $('#data-table tr:eq(1)').after(getNewRow());
				}
				else {
					$("#add-entry").addClass("disabled")
				}
				$('.selectpicker').selectpicker();
		};

		$(document).ready(function () {
			App.init();
			Demo.init();

			//radioswitch.init()

			//$("#form").validate();

			$('#data-table thead tr').clone(true).appendTo('#data-table thead');
			$('#data-table thead tr:eq(1) th').each(function (i) {
				if (i === 0)
					return;

				var title = $(this).text();

				$(this).html('<input type="text" placeholder="Buscar" />');

				$('input', this).on('keyup change', function () {
					if (table.column(i).search() !== this.value) {
						table
							.column(i)
							.search(this.value)
							.draw();
					}
				});
			});

			var table = $("#data-table").DataTable(
				{
					pageLength: 10,
					orderCellsTop: true,
					fixedHeader: true,
					bLengthChange: false,
					bFilter: true,
					bAutoWidth: false,
					searching: true,
					sDom: 'lrtip',
					"bInfo": false,
					buttons: [
						{
							extend: 'csv',
							charset: 'utf-8',
							bom: true
						}
					],
					"dom": 'rtp',
					"language": {
						"search": '<a href="@Url.Action("Index", "home")" class="btn btn-white m-r-5"><i class="fa fa-eraser"></i> @btnFilter</a> <br><div><i class="fa fa-filter" aria-hidden="true"></i>Buscar',
						"searchPlaceholder": '@searchPlaceholder',
						"emptyTable": "@emptyTable",
						"lengthMenu": "@lengthMenu",
						"info": "@info",
						"paginate": {
							"first": "@paginatefirst",
							"last": "@paginatelast",
							"next": "@pageNext",
							"previous": "@pagePreviuos"
						},
						"loadingRecords": "@loadingRecords",
						"processing": "@processing",
						"zeroRecords": "@zeroRecords",
						"infoEmpty": "@infoEmpty",
						"infoFiltered": "@infoFiltered",
					},
					"order": [],
					"columnDefs": [{
						"targets": 'no-sort',
						"orderable": false,
						"className": 'dt-control',
						"data": null,
						"defaultContent": ''
					}]
				});

			// Formatting function for row details - modify as you need
			function format(event) {

				var id = event[1];

				if (id === -1) {
					id = "";
				}

				var ret = null;

				$.ajax({
					async: false,
					url: pb.base + "/CertCatalogos/GetRoleAliasById/" + id,
					dataType: "json",
					success: function (data) {
						ret = data.html;

						//console.log(ret);
					}
				});

				let tabla = ret;

				return $(tabla).toArray();

				//return ret;
			}

			function getId(event) {

				var id = event[1];

				if (id === -1) {
					id = "";
				}

				return id;
			}

			// Add event listener for opening and closing details
			table.on('click', 'td.dt-control', function (event) {
				let tr = event.target.closest('tr');
				let row = table.row(tr);
				let tableId = '#data-table-rol-alias-' + getId(row.data()) + '';

				//console.log(row.data());
				//console.log(tableId);

				if (row.child.isShown()) {
					// This row is already open - close it
					row.child.hide();
					//tr.removeClass('shown');
					// Destroy table child
					$(tableId).DataTable().destroy();
				}
				else {
					// Open this row
					row.child(format(row.data())).show();
					// You're going to need the row data
					let rowData = format(row.data());

					console.log(rowData);

					// Activate the child table as a DataTable
					tableDetail = $(tableId).DataTable({
						data: rowData.id,
						pageLength: 10,
						orderCellsTop: true,
						fixedHeader: true,
						bLengthChange: false,
						bFilter: true,
						bAutoWidth: false,
						searching: true,
						sDom: 'lrtip',
						"bInfo": false,
						buttons: [
							{
								extend: 'csv',
								charset: 'utf-8',
								bom: true
							}
						],
						"dom": 'rtp',
						"language": {
							"search": '<a href="@Url.Action("Index", "home")" class="btn btn-white m-r-5"><i class="fa fa-eraser"></i> @btnFilter</a> <br><div><i class="fa fa-filter" aria-hidden="true"></i>Buscar',
							"searchPlaceholder": '@searchPlaceholder',
							"emptyTable": "@emptyTable",
							"lengthMenu": "@lengthMenu",
							"info": "@info",
							"paginate": {
								"first": "@paginatefirst",
								"last": "@paginatelast",
								"next": "@pageNext",
								"previous": "@pagePreviuos"
							},
							"loadingRecords": "@loadingRecords",
							"processing": "@processing",
							"zeroRecords": "@zeroRecords",
							"infoEmpty": "@infoEmpty",
							"infoFiltered": "@infoFiltered",
						},
						"order": [],
						"columnDefs": [{
							"targets": 'no-sort',
							"orderable": false,
						}]
					});
					//tr.addClass('shown');

					tableIdentificator = tableId;

					if (tableIdentificator && tableDetail)
					{
						$(tableIdentificator + ' thead tr').clone(true).appendTo(tableIdentificator + ' thead');
						$(tableIdentificator + ' thead tr:eq(1) th').each(function (i) {
							if (i === 0)
								return;

							var title = $(this).text();

							$(this).html('<input type="text" placeholder="Buscar" />');

							$('input', this).on('keyup change', function () {
								if (tableDetail.column(i).search() !== this.value) {
									tableDetail
										.column(i)
										.search(this.value)
										.draw();
								}
							});
						});
					}
				}
			});

				// $("#ExporttoExcel").on("click", function () {
				// 	table.button('.buttons-csv').trigger();
				// });

			// Exportacion Excel

			var tableExportToExcel = $("#data-table-export-to-excel").DataTable(
				{
					buttons: [
						{
							extend: 'csv',
							charset: 'utf-8',
							bom: true
						}
					]
				});

			$("#ExporttoExcel").on("click", function () {
				tableExportToExcel.button('.buttons-csv').trigger();
			});

			$("#ClearFilters").on("click", function () {
				$('#data-table thead tr:eq(1) th').each(function (i) {
					if (i === 0)
						return;
					$('input', this).val("").change();
				});
			});

			$('#add-entry').on('click', function (event) {
				event.preventDefault();
				//$('#addGeneralCatalog').modal('show');
				$('#data-table tr:eq(1)').after(getNewRow());
				$("#ExporttoExcel").addClass("disabled");
				$("#add-entry").addClass("disabled")
				if (!isCreate) {
					isCreate = true;
					$("#ExporttoExcel").addClass("disabled");
					// $('#data-table tr:eq(1)').after(getNewRow());
				}
				else {
					$("#add-entry").addClass("disabled")
				}
				$('.selectpicker').selectpicker();
			});

			//Data Table manipulation
			//$.fn.dataTable.render.moment("M/D/YYYY");

			$('.selectpicker').selectpicker();
		});
	</script>
}
