@model LiberacionProductoWeb.Models.CertCatalogosViewModels.ProductoGradoViewModel;
@using Microsoft.Extensions.Localization;
@using LiberacionProductoWeb.Localize;
@using LiberacionProductoWeb.Helpers;
@using System.Globalization;
@using Microsoft.Extensions.Configuration;
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers
@inject IStringLocalizer<Resource> resource;
@inject IConfiguration Configuration

@{
    ViewData["Title"] = "Producto - Grado";
    Layout = "~/Views/Shared/_LayoutCatalogs.cshtml";

    var btnFind = resource.GetString("BtnFind");
    var btnFilter = resource.GetString("BtnFilter");
    var lengthMenu = resource.GetString("LengthMenu");
    var searchPlaceholder = resource.GetString("SearchPlaceholder");
    var info = resource.GetString("Info");
    var emptyTable = resource.GetString("EmptyTable");
    var paginatefirst = resource.GetString("Paginatefirst");
    var paginatelast = resource.GetString("Paginatelast");
    var pageNext = resource.GetString("PageNext");
    var pagePreviuos = resource.GetString("PagePreviuos");
    var loadingRecords = resource.GetString("LoadingRecords");
    var processing = resource.GetString("Processing");
    var zeroRecords = resource.GetString("ZeroRecords");
    var infoEmpty = resource.GetString("InfoEmpty");
    var infoFiltered = resource.GetString("InfoFiltered");
    bool isChecked = Model.showAll;
}

@* @await Html.PartialAsync("~/Views/Shared/_Navigation.cshtml") *@

<!-- ============================================================== -->
<!-- Page wrapper  -->
<!-- ============================================================== -->
<div id="content" class="content">
    <!-- begin breadcrumb -->
    <ol class="breadcrumb pull-right">
        <li class="breadcrumb-item"><a href="@Url.Action("Access", "Access")">Inicio</a></li>
        <li class="breadcrumb-item"><a href="@Url.Action("Catalogs", "CertCatalogos")">Certificados Catálogos</a></li>
        <li class="breadcrumb-item active">Producto - Grado</li>
    </ol>
    <!-- end breadcrumb -->
    <!-- begin page-header -->
    <h1 class="page-header">Catálogo Producto - Grado</h1>
    <!-- end page-header -->
    @* <div class="section-container section-with-top-border p-b-10">
    <div class="row">
    <div class="col-lg-20">
    <form>
    <div class="row">
    <div class="col-lg-6 m-b-15">
    <div class="m-b-5"><b>Producto:</b></div>
    <select multiple asp-for="SelectedProductoGradoFilter" asp-items="Model.ProductoGradoFilter"
    class="selectpicker show-menu-arrow combobox" data-style="btn-inverse"
    data-live-search="true" title="Selecciona">
    </select>
    </div>
    <div class="col-lg-6 m-b-15">
    <div class="m-b-5"> &nbsp; </div>
    <div class="input-group">
    <button type="submit" class="btn btn-inverse">Buscar</button>
    <a href="@Url.Action("ClearFiltersProductoGrado", "CertCatalogos" )" class="btn btn-white m-r-5">
    <i class="fa fa-eraser"></i> Limpiar filtros
    </a>
    </div>
    </div>
    </div>
    </form>
    </div>
    </div>
    </div> *@

    <div class="section-container section-with-top-border p-b-5">
        <div class="row">
            <div class="panel panel-primary">
                <div class="panel-heading">
                    <div class="btn-group pull-left">
                        @*  @if (User.HasClaim(SecurityConstants.PERMISSION, SecurityConstants.EDITAR_CATALOGO_DE_PRODUCTO))
                        { *@
                        @*  } *@
                        <a href="javascript:;" class="btn btn-white m-r-5" id="ExporttoExcel">
                            <i class="fa fa-file-excel"></i> Exportar a excel
                        </a>
                    </div>
                    <div class="btn-group pull-right">
                        <a href="javascript:;" class="btn btn-white m-r-5" id="ClearFilters">
                            <i class="fa fa-eraser"></i>Limpiar filtros
                        </a>
                    </div>

                    <label class="switch-container pull-right">
                        <input type="checkbox" id="showAllSwitch" @(isChecked ? "checked" : "")>
                        <span class="switch"></span>
                        <span class="switch-text">Mostrar todos</span>
                    </label>

                    <h4 class="panel-title">
                        &nbsp;
                    </h4>
                </div>

                <!-- Mensaje de error -->
                <div class="col-md-12" id="message"></div>

                <div class="panel-body">
                    <div>
                        <table id="data-table" class="display compact table table-bordered table-hover">
                            <thead>
                                <tr>
                                    <th class="no-sort" style="width:1%"></th>
                                    <th style="white-space: nowrap">Clave Pals</th>
                                    <th style="white-space: nowrap">Nombre</th>
                                    <th style="white-space: nowrap">Nombre Esp</th>
                                    <th style="white-space: nowrap">Estatus</th>
                                </tr>
                            </thead>
                            <tbody>

                                @foreach (var entry in Model.ProductosList)
                                {
                                    <tr>
                                        <td></td>
                                        <td>
                                            @entry.clavE_PALS
                                        </td>
                                        <td>
                                            @entry.nombre
                                        </td>
                                        <td>
                                            @entry.nombrE_ESP
                                        </td>
                                        <td>
                                            @{
                                                if (Convert.ToBoolean(entry.iD_STATUS))
                                                {
                                                    @: Activo
                                                }
                                                else
                                                {
                                                    @: Inactivo
                                                }
                                            }
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>

                <div class="panel-body" style="display:none;">
                    <div>
                        <table id="data-table-export-to-excel" class="display compact table table-bordered table-hover">
                            <thead>
                                <tr>
                                    <th style="white-space: nowrap">Clave Pals</th>
                                    <th style="white-space: nowrap">Nombre</th>
                                    <th style="white-space: nowrap">Nombre ESP</th>
                                    <th style="white-space: nowrap">Estatus</th>
                                    <th style="white-space: nowrap;">Grado</th>
                                    <th style="white-space: nowrap;">Producto</th>
                                </tr>
                            </thead>
                            <tbody>

                                @foreach (var entry in Model.ProductoGradoExportExcelList)
                                {
                                    <tr>
                                        <td>
                                            @entry.clavE_PALS
                                        </td>
                                        <td>
                                            @entry.nombre
                                        </td>
                                        <td>
                                            @entry.nombrE_ESP
                                        </td>
                                        <td>
                                            @{
                                                if (Convert.ToBoolean(entry.iD_STATUS))
                                                {
                                                    @: Activo
                                                }
                                                else
                                                {
                                                    @: Inactivo
                                                }
                                            }
                                        </td>
                                        <td>
                                            @{
                                                foreach (var item in Model.GradosList)
                                                {
                                                    if (item.iD_GRADO == entry.iD_GRADO)
                                                    {
                                                        @item.descripcion
                                                    }
                                                    else
                                                    {
                                                        @:
                                                    }
                                                }
                                            }
                                        </td>
                                        <td>
                                            @{
                                                foreach (var item in Model.ProductosList)
                                                {
                                                    if (item.iD_PRODUCTO == entry.iD_PRODUCTO)
                                                    {
                                                        @item.nombre
                                                    }
                                                    else
                                                    {
                                                        @:
                                                    }
                                                }
                                            }
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Styles {


    <link href="~/plugins/bootstrap-combobox/css/bootstrap-combobox.css" rel="stylesheet" />
    <link href="~/plugins/bootstrap-select/bootstrap-select.css" rel="stylesheet" />
    <link href="~/plugins/select2/dist/css/select2.min.css" rel="stylesheet" />
    <link href="~/plugins/bootstrap-calendar/css/bootstrap_calendar.css" rel="stylesheet" />


    <link href="~/plugins/DataTables/media/css/dataTables.bootstrap.min.css" rel="stylesheet" />
    <link href="~/plugins/DataTables/extensions/Responsive/css/responsive.bootstrap.min.css" rel="stylesheet" />
    <link href="~/plugins/DataTables/extensions/Buttons/css/buttons.bootstrap.min.css" rel="stylesheet" />

    <link href="~/plugins/gritter/css/jquery.gritter.css" rel="stylesheet" />

    <link href="~/plugins/jquery/jquery.dataTables.min.css" rel="stylesheet" />
    <link href="~/css/default.css" rel="stylesheet" />
}

@section scripts {

    <environment names="Development,Staging,Production">
        <script src="~/plugins/bootstrap-calendar/js/bootstrap_calendar.min.js"></script>

        <script src="~/plugins/gritter/js/jquery.gritter.js"></script>

        <script src="~/plugins/bootstrap-combobox/js/bootstrap-combobox.js"></script>
        <script src="~/plugins/bootstrap-select/bootstrap-select.js"></script>
        <script src="~/plugins/select2/dist/js/select2.min.js"></script>


        <script src="~/plugins/bootstrap-calendar/js/bootstrap_calendar.min.js"></script>

        <script src="~/plugins/DataTables/media/js/dataTables.bootstrap.min.js"></script>

        <script src="~/plugins/DataTables/media/js/jquery.dataTables.js"></script>
        <script src="~/plugins/DataTables/media/js/dataTables.bootstrap.min.js"></script>
        <script src="~/plugins/DataTables/extensions/Responsive/js/dataTables.responsive.min.js"></script>

        <script src="~/plugins/DataTables/extensions/Buttons/js/buttons.html5.min.js"></script>
        <script src="~/plugins/DataTables/extensions/Buttons/js/buttons.print.min.js"></script>
        <script src="~/plugins/DataTables/extensions/Buttons/js/dataTables.buttons.min.js"></script>

        <script src="~/plugins/gritter/js/jquery.gritter.js"></script>
        <script src="~/plugins/bootbox/js/bootbox.all.min.js"></script>

        <script src="~/js/demo.min.js"></script>
        <script src="~/js/apps.min.js"></script>
        <script src="~/js/catalogs.js"></script>
    </environment>

    <script>
        var commonUrl = @Json.Serialize(@Configuration.GetSection("publishUrl").GetSection("commonUrl").Value)

            console.log(commonUrl);

        var pb = {
            base: commonUrl
        };

        $(function () {

            if ('@Model.MensajeError'.length > 1) {
                $('#message').append('<div class="alert alert-danger"> <a class="close" data-dismiss="alert" href="#">&times;</a>@Model.MensajeError </div>');
            }
        });

        $(function () {

            if ('@Model.MensajeInfo'.length > 1) {
                $('#message').append('<div class="alert alert-success"> <a class="close" data-dismiss="alert" href="#">&times;</a>@Model.MensajeInfo </div>');
            }
        });


        var refresh = function () {
            window.location.href = '@Url.Action("ProductoGrados", "CertCatalogos")';
        }

        var deleteOnClick = function (event) {
            bootbox.confirm({
                message: "¿Deseas eliminar el registro?",
                buttons: {
                    confirm: {
                        label: 'Si',
                        className: 'btn-success'
                    },
                    cancel: {
                        label: 'No',
                        className: 'btn-danger'
                    }
                },
                callback: function (result) {
                    if (result) {
                        deleteConfirm(event);
                    }
                }
            });
        };

        var deleteOnClickProductoGrados = function (event) {
            bootbox.confirm({
                message: "¿Deseas eliminar el registro?",
                buttons: {
                    confirm: {
                        label: 'Si',
                        className: 'btn-success'
                    },
                    cancel: {
                        label: 'No',
                        className: 'btn-danger'
                    }
                },
                callback: function (result) {
                    if (result) {
                        deleteConfirmProductoGrados(event);
                    }
                }
            });
        };

        var deleteConfirm = function (event) {
            var id = $(event).data("id");

            if (id === -1) {
                id = "";
            }

            $.ajax({
                type: "POST",
                url: pb.base + "/CertCatalogos/DeleteProducto/" + id,
                dataType: "json",
                success: function (response) {
                    if (response.message) {
                        $.gritter.add({
                            title: "Error",
                            text: response.message,
                            class_name: "gritter-light"
                        })
                    } else {
                        //sucess add, needs to refresh and show message
                        window.location.href = '@Url.Action("ProductoGrados", "CertCatalogos")';
                    }
                },
                failure: function (response) {
                    $.gritter.add({
                        title: "Error",
                        text: "Ocurrio un error, por favor comunicate con el Administrador",
                        class_name: "gritter-light"
                    })
                }
            });
        }

        var deleteConfirmProductoGrados = function (event) {
            var id = $(event).data("id");

            if (id === -1) {
                id = "";
            }

            $.ajax({
                type: "POST",
                url: pb.base + "/CertCatalogos/DeleteProductoGrados/" + id,
                dataType: "json",
                success: function (response) {
                    if (response.message) {
                        $.gritter.add({
                            title: "Error",
                            text: response.message,
                            class_name: "gritter-light"
                        })
                    } else {
                        //sucess add, needs to refresh and show message
                        window.location.href = '@Url.Action("ProductoGrados", "CertCatalogos")';
                    }
                },
                failure: function (response) {
                    $.gritter.add({
                        title: "Error",
                        text: "Ocurrio un error, por favor comunicate con el Administrador",
                        class_name: "gritter-light"
                    })
                }
            });
        }

        @{
            var idTag = "<select id='iD_PRODUCTO_GRADO' class='form-control' data-style='btn-white'  title='Selecciona'>";

            if (Model.ProductoGradoFilter != null)
            {
                foreach (var item in Model.ProductoGradoFilter)
                {
                    idTag += "<option value='" + item.Value + "'>" + item.Text + "</option>";
                }

                idTag += "</select>";
            }

            var gradoTag = "<select id='iD_GRADO' class='form-control' data-style='btn-white'  title='Selecciona'>";

            if (Model.GradosFilter != null)
            {
                foreach (var item in Model.GradosFilter)
                {
                    gradoTag += "<option value='" + item.Value + "'>" + item.Text + "</option>";
                }

                gradoTag += "</select>";
            }
        }

                var getEditRow = function (Id) {
            var ret = null;
            $.ajax({
                async: false,
                url: pb.base + "/CertCatalogos/GetProductoHTMLTagsById/" + Id,
                dataType: "json",
                success: function (data) {
                    ret = data.html;
                }
            });

            return ret;
        };

        var getEditRowProductoGrados = function (Id) {
            var ret = null;
            $.ajax({
                async: false,
                url: pb.base + "/CertCatalogos/GetProductoGradosHTMLTagsById/" + Id,
                dataType: "json",
                success: function (data) {
                    ret = data.html;
                }
            });

            return ret;
        };

        var getNewRow = function () {
            var result = "<tr>" +
                "<td> <a href='javascript:void(0)' onclick='removeOnClick(this);return false;'  class='delete-data btn btn-danger btn-xs btn-space' data-id='-1' title='Cancelar'><i class='fa fa-times-circle'></i></a>" +
                "<a href='javascript:void(0)' onclick='saveOnClick(this);return false;' id='saveData' class='save-data btn btn-info btn-xs btn-space' data-id='-1' ><i class='fa fa-save'></i></a> </td>" +
                "<td><input class='form-control' id='clavE_PALS' type='text'></td>" +
                "<td><input class='form-control' id='nombre' type='text'></td>" +
                "<td><input class='form-control' id='nombrE_ESP' type='text'></td>" +
                "<td><select id='iD_STATUS' class='form-control'><option  value='true'>Activo</option><option value='false'>Inactivo</option></select> </td>" +
                "</tr>"
            return result;
        };

        var getNewRowProductoGrados = function (Id, iD_PRODUCTO) {
            var result = "<tr>" +
                "<td> <a href='javascript:void(0)' onclick='removeOnClick(this);return false;'  class='delete-data btn btn-danger btn-xs btn-space' data-id='-1' title='Cancelar'><i class='fa fa-times-circle'></i></a>" +
                "<a href='javascript:void(0)' onclick='saveOnClickProductoGrados(this);return false;' id='saveData' class='save-data btn btn-info btn-xs btn-space' data-id='-1' ><i class='fa fa-save'></i></a> </td>" +
                "<td style='display: none;'><input class='form-control' id='clavE_PALS' value='" + Id + "' type='text'></td>" +
                "<td style='display: none;'><input class='form-control' id='iD_PRODUCTO' value='" + iD_PRODUCTO + "' type='text'></td>" +
                "<td>@Html.Raw(gradoTag)</td>" +
                "<td><select id='iD_STATUS' class='form-control'><option  value='true'>Activo</option><option value='false'>Inactivo</option></select> </td>" +
                "</tr>"
            return result;
        };

        var removeOnClick = function (event) {
            $(event).closest("tr").remove();
            $("#ExporttoExcel").removeClass("disabled");
            $("#add-entry").removeClass("disabled")
        };

        var isEdit = false;
        var isCreate = false;

        var editOnClick = function (event) {
            var Id = $(event).data("id");

            if (isCreate) {
                return false;
            }

            if (!isEdit) {
                //remueve y pinta los controles
                isEdit = true;
                $("#add-entry").addClass("disabled");
                $("#ExporttoExcel").addClass("disabled");
                $(event).closest("tr").replaceWith(getEditRow(Id));
            }
        };

        var editOnClickProductoGrados = function (event) {
            var Id = $(event).data("id");

            if (isCreate) {
                return false;
            }

            if (!isEdit) {
                //remueve y pinta los controles
                isEdit = true;
                $("#add-entry").addClass("disabled");
                $("#ExporttoExcel").addClass("disabled");
                $(event).closest("tr").replaceWith(getEditRowProductoGrados(Id));
            }
        };

        var saveConfirm = function (event) {
            if (isEdit) {
                $("#add-entry").removeClass("disabled");
                $("#ExporttoExcel").removeClass("disabled");
            }

            isEdit = false;
            isCreate = false;

            var id = $(event).data("id");

            if (id === -1) {
                id = "";
            }

            var iD_PRODUCTO = "";
            var clavE_PALS = "";
            var nombre = "";
            var nombrE_ESP = "";
            var iD_STATUS = "";

            $(event).closest("tr").each(function () {
                $.each(this.cells, function () {
                    //gets values for each cell

                    if ($(this).find("#iD_PRODUCTO").length) {
                        iD_PRODUCTO = $(this).find("#iD_PRODUCTO").val();
                    }

                    if ($(this).find("#clavE_PALS").length) {
                        clavE_PALS = $(this).find("#clavE_PALS").val();
                    }

                    if ($(this).find("#nombre").length) {
                        nombre = $(this).find("#nombre").val();
                    }

                    if ($(this).find("#nombrE_ESP").length) {
                        nombrE_ESP = $(this).find("#nombrE_ESP").val();
                    }

                    if ($(this).find("#iD_STATUS").length) {
                        iD_STATUS = $(this).find("#iD_STATUS").val();
                    }
                });
            });

            $.ajax({
                type: "POST",
                url: pb.base + "/CertCatalogos/SaveOrEditProducto",
                beforeSend: function (xhr) {
                    xhr.setRequestHeader("XSRF-TOKEN",
                        $('input:hidden[name="__RequestVerificationToken"]').val());
                },
                data: JSON.stringify({
                    iD_PRODUCTO: String(id),
                    clavE_PALS: clavE_PALS,
                    nombre: nombre,
                    nombrE_ESP: nombrE_ESP,
                    iD_STATUS: iD_STATUS

                }),
                contentType: "application/json",
                dataType: "json",
                success: function (response) {
                    if (response.message) {
                        $.gritter.add({
                            title: "Error",
                            text: response.message,
                            class_name: "gritter-light"
                        })
                    } else {
                        //sucess add, needs to refresh and show message
                        window.location.href = '@Url.Action("ProductoGrados", "CertCatalogos")';
                    }
                },
                failure: function (response) {
                    //failure, shgow messahe with error
                    alert("Fail");
                }
            });
        }

        var saveConfirmProductoGrados = function (event) {

            if (isEdit) {
                $("#add-entry").removeClass("disabled");
                $("#ExporttoExcel").removeClass("disabled");
            }

            isEdit = false;
            isCreate = false;

            var id = $(event).data("id");

            if (id === -1) {
                id = "";
            }

            var iD_PRODUCTO_GRADO = "";
            var iD_GRADO = "";
            var iD_PRODUCTO = "";
            var clavE_PALS = "";
            var nombre = "";
            var nombrE_ESP = "";
            var iD_STATUS = "";

            $(event).closest("tr").each(function () {
                $.each(this.cells, function () {
                    //gets values for each cell

                    if ($(this).find("#iD_PRODUCTO_GRADO").length) {
                        iD_PRODUCTO_GRADO = $(this).find("#iD_PRODUCTO_GRADO").val();
                    }

                    if ($(this).find("#iD_GRADO").length) {
                        iD_GRADO = $(this).find("#iD_GRADO").val();
                    }

                    if ($(this).find("#iD_PRODUCTO").length) {
                        iD_PRODUCTO = $(this).find("#iD_PRODUCTO").val();
                    }

                    if ($(this).find("#clavE_PALS").length) {
                        clavE_PALS = $(this).find("#clavE_PALS").val();
                    }

                    if ($(this).find("#nombre").length) {
                        nombre = $(this).find("#nombre").val();
                    }

                    if ($(this).find("#nombrE_ESP").length) {
                        nombrE_ESP = $(this).find("#nombrE_ESP").val();
                    }

                    if ($(this).find("#iD_STATUS").length) {
                        iD_STATUS = $(this).find("#iD_STATUS").val();
                    }
                });
            });

            $.ajax({
                type: "POST",
                url: pb.base + "/CertCatalogos/SaveOrEditProductoGrados",
                beforeSend: function (xhr) {
                    xhr.setRequestHeader("XSRF-TOKEN",
                        $('input:hidden[name="__RequestVerificationToken"]').val());
                },
                data: JSON.stringify({
                    iD_PRODUCTO_GRADO: String(id),
                    iD_GRADO: iD_GRADO,
                    iD_PRODUCTO: iD_PRODUCTO,
                    clavE_PALS: clavE_PALS,
                    nombre: nombre,
                    nombrE_ESP: nombrE_ESP,
                    iD_STATUS: iD_STATUS
                }),
                contentType: "application/json",
                dataType: "json",
                success: function (response) {
                    if (response.message) {
                        $.gritter.add({
                            title: "Error",
                            text: response.message,
                            class_name: "gritter-light"
                        })
                    } else {
                        //sucess add, needs to refresh and show message
                        window.location.href = '@Url.Action("ProductoGrados", "CertCatalogos")';
                    }
                },
                failure: function (response) {
                    //failure, shgow messahe with error
                    alert("Fail");
                }
            });
        }

        var saveOnClick = function (event) {
            bootbox.confirm({
                message: "¿Deseas guardar los cambios?",
                buttons: {
                    confirm: {
                        label: 'Si',
                        className: 'btn-success'
                    },
                    cancel: {
                        label: 'No',
                        className: 'btn-danger'
                    }
                },
                callback: function (result) {
                    if (result) {
                        saveConfirm(event);
                    }
                }
            });
        };

        var saveOnClickProductoGrados = function (event) {
            bootbox.confirm({
                message: "¿Deseas guardar los cambios?",
                buttons: {
                    confirm: {
                        label: 'Si',
                        className: 'btn-success'
                    },
                    cancel: {
                        label: 'No',
                        className: 'btn-danger'
                    }
                },
                callback: function (result) {
                    if (result) {
                        saveConfirmProductoGrados(event);
                    }
                }
            });
        };

        var tableIdentificator = "";
        var tableDetail = "";

        var addEntryProductoGrados = function (event, Id, iD_PRODUCTO) {
            //console.log('Entro');
            //event.preventDefault();
            //$('#addGeneralCatalog').modal('show');
            $(tableIdentificator + ' tr:eq(1)').after(getNewRowProductoGrados(Id, iD_PRODUCTO));
            $("#ExporttoExcel").addClass("disabled");
            $("#add-entry").addClass("disabled")
            if (!isCreate) {
                isCreate = true;
                $("#ExporttoExcel").addClass("disabled");
                // $('#data-table tr:eq(1)').after(getNewRow());
            }
            else {
                $("#add-entry").addClass("disabled")
            }
            $('.selectpicker').selectpicker();
        };

        document.addEventListener('DOMContentLoaded', function () {
            const switchElement = document.getElementById('showAllSwitch');

            switchElement.addEventListener('change', function () {
                if (this.checked) {
                    onSwitchActive();
                } else {
                    onSwitchInactive();
                }
            });

            function onSwitchActive() {
                console.log('El switch está activo');
                window.location.href = '@Url.Action("ProductoGrados", "CertCatalogos")?showAll=true';
            }

            function onSwitchInactive() {
                console.log('El switch está inactivo');
                window.location.href = '@Url.Action("ProductoGrados", "CertCatalogos")?showAll=false';
            }
        });

        $(document).ready(function () {
            App.init();
            Demo.init();

            //radioswitch.init()

            //$("#form").validate();

            $('#data-table thead tr').clone(true).appendTo('#data-table thead');
            $('#data-table thead tr:eq(1) th').each(function (i) {
                if (i === 0)
                    return;

                var title = $(this).text();

                $(this).html('<input type="text" placeholder="Buscar" />');

                $('input', this).on('keyup change', function () {
                    if (table.column(i).search() !== this.value) {
                        table
                            .column(i)
                            .search(this.value)
                            .draw();
                    }
                });
            });

            var table = $("#data-table").DataTable(
                {
                    pageLength: 10,
                    orderCellsTop: true,
                    fixedHeader: true,
                    bLengthChange: false,
                    bFilter: true,
                    bAutoWidth: false,
                    searching: true,
                    sDom: 'lrtip',
                    "bInfo": false,
                    buttons: [
                        {
                            extend: 'csv',
                            charset: 'utf-8',
                            bom: true
                        }
                    ],
                    "dom": 'rtp',
                    "language": {
                        "search": '<a href="@Url.Action("Index", "home")" class="btn btn-white m-r-5"><i class="fa fa-eraser"></i> @btnFilter</a> <br><div><i class="fa fa-filter" aria-hidden="true"></i>Buscar',
                        "searchPlaceholder": '@searchPlaceholder',
                        "emptyTable": "@emptyTable",
                        "lengthMenu": "@lengthMenu",
                        "info": "@info",
                        "paginate": {
                            "first": "@paginatefirst",
                            "last": "@paginatelast",
                            "next": "@pageNext",
                            "previous": "@pagePreviuos"
                        },
                        "loadingRecords": "@loadingRecords",
                        "processing": "@processing",
                        "zeroRecords": "@zeroRecords",
                        "infoEmpty": "@infoEmpty",
                        "infoFiltered": "@infoFiltered",
                    },
                    "order": [],
                    "columnDefs": [{
                        "pageLength": 10,
                        "targets": 'no-sort',
                        "orderable": false,
                        "className": 'dt-control',
                        "data": null,
                        "defaultContent": '',
                        "language": {
                            "search": '<a href="@Url.Action("Index", "home")" class="btn btn-white m-r-5"><i class="fa fa-eraser"></i> @btnFilter</a> <br><div><i class="fa fa-filter" aria-hidden="true"></i>Buscar',
                            "searchPlaceholder": '@searchPlaceholder',
                            "emptyTable": "@emptyTable",
                            "lengthMenu": "@lengthMenu",
                            "info": "@info",
                            "paginate": {
                                "first": "@paginatefirst",
                                "last": "@paginatelast",
                                "next": "@pageNext",
                                "previous": "@pagePreviuos"
                            },
                            "loadingRecords": "@loadingRecords",
                            "processing": "@processing",
                            "zeroRecords": "@zeroRecords",
                            "infoEmpty": "@infoEmpty",
                            "infoFiltered": "@infoFiltered",
                        },
                    }]
                });

            // Formatting function for row details - modify as you need
            function format(event) {

                var id = event[1];

                if (id === -1) {
                    id = "";
                }

                var ret = null;

                $.ajax({
                    async: false,
                    url: pb.base + "/CertCatalogos/GetProductGradesById/" + id,
                    dataType: "json",
                    success: function (data) {
                        ret = data.html;
                    }
                });

                let tabla = ret;

                return $(tabla).toArray();
            }

            function getId(event) {

                var id = event[1];

                if (id === -1) {
                    id = "";
                }

                return id;
            }

            // Add event listener for opening and closing details
            table.on('click', 'td.dt-control', function (event) {
                let tr = event.target.closest('tr');
                let row = table.row(tr);
                let tableId = '#data-table-producto-grados-' + getId(row.data()) + '';

                console.log(row.data());

                if (row.child.isShown()) {
                    // This row is already open - close it
                    row.child.hide();
                    //tr.removeClass('shown');
                    // Destroy table child
                    $(tableId).DataTable().destroy();
                }
                else {
                    // Open this row
                    row.child(format(row.data())).show();
                    // You're going to need the row data
                    let rowData = format(row.data());

                    console.log(rowData);

                    // Activate the child table as a DataTable
                    tableDetail = $(tableId).DataTable({
                        data: rowData.id,
                        pageLength: 10,
                        orderCellsTop: true,
                        fixedHeader: true,
                        bLengthChange: false,
                        bFilter: true,
                        bAutoWidth: false,
                        searching: true,
                        sDom: 'lrtip',
                        "bInfo": false,
                        buttons: [
                            {
                                extend: 'csv',
                                charset: 'utf-8',
                                bom: true
                            }
                        ],
                        "dom": 'rtp',
                        "language": {
                            "search": '<a href="@Url.Action("Index", "home")" class="btn btn-white m-r-5"><i class="fa fa-eraser"></i> @btnFilter</a> <br><div><i class="fa fa-filter" aria-hidden="true"></i>Buscar',
                            "searchPlaceholder": '@searchPlaceholder',
                            "emptyTable": "@emptyTable",
                            "lengthMenu": "@lengthMenu",
                            "info": "@info",
                            "paginate": {
                                "first": "@paginatefirst",
                                "last": "@paginatelast",
                                "next": "@pageNext",
                                "previous": "@pagePreviuos"
                            },
                            "loadingRecords": "@loadingRecords",
                            "processing": "@processing",
                            "zeroRecords": "@zeroRecords",
                            "infoEmpty": "@infoEmpty",
                            "infoFiltered": "@infoFiltered",
                        },
                        "order": [],
                        "columnDefs": [{
                            "targets": 'no-sort',
                            "orderable": false,
                        }]
                    });
                    //tr.addClass('shown');

                    tableIdentificator = tableId;

                    if (tableIdentificator && tableDetail) {
                        $(tableIdentificator + ' thead tr').clone(true).appendTo(tableIdentificator + ' thead');
                        $(tableIdentificator + ' thead tr:eq(1) th').each(function (i) {
                            if (i === 0)
                                return;

                            var title = $(this).text();

                            $(this).html('<input type="text" placeholder="Buscar" />');

                            $('input', this).on('keyup change', function () {
                                if (tableDetail.column(i).search() !== this.value) {
                                    tableDetail
                                        .column(i)
                                        .search(this.value)
                                        .draw();
                                }
                            });
                        });
                    }
                }
            });

            // $("#ExporttoExcel").on("click", function () {
            // 	table.button('.buttons-csv').trigger();
            // });

            // Exportacion Excel

            var tableExportToExcel = $("#data-table-export-to-excel").DataTable(
                {
                    buttons: [
                        {
                            extend: 'csv',
                            charset: 'utf-8',
                            bom: true
                        }
                    ]
                });

            $("#ExporttoExcel").on("click", function () {
                tableExportToExcel.button('.buttons-csv').trigger();
            });

            $("#ClearFilters").on("click", function () {
                $('#data-table thead tr:eq(1) th').each(function (i) {
                    if (i === 0)
                        return;
                    $('input', this).val("").change();
                });
            });

            $('#add-entry').on('click', function (event) {
                event.preventDefault();
                //$('#addGeneralCatalog').modal('show');
                $('#data-table tr:eq(1)').after(getNewRow());
                $("#ExporttoExcel").addClass("disabled");
                $("#add-entry").addClass("disabled")
                if (!isCreate) {
                    isCreate = true;
                    $("#ExporttoExcel").addClass("disabled");
                    // $('#data-table tr:eq(1)').after(getNewRow());
                }
                else {
                    $("#add-entry").addClass("disabled")
                }
                $('.selectpicker').selectpicker();
            });

            //Data Table manipulation
            //$.fn.dataTable.render.moment("M/D/YYYY");

            $('.selectpicker').selectpicker();
        });

        $("#data-table-producto-grado").DataTable();

    </script>
}
