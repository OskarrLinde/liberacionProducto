@using Microsoft.AspNetCore.Mvc.Localization
@using LiberacionProductoWeb.Localize;
@using Microsoft.Extensions.Localization;
@using Microsoft.AspNetCore.Identity;
@using LiberacionProductoWeb.Helpers;
@using LiberacionProductoWeb.Models.ProductionOrderViewModels;
@using Microsoft.Extensions.Configuration;
@model LiberacionProductoWeb.Models.ProductionOrderViewModels.ProductionOrderViewModel;
@inject IViewLocalizer Localizer
@inject IStringLocalizer<Resource> resource;
@inject IConfiguration Config;
@inject UserManager<LiberacionProductoWeb.Models.IndentityModels.ApplicationUser> UserManager
@{

    var notInformation = resource.GetString("NoInformation");
    var lengthMenu = resource.GetString("LengthMenu");
    var searchPlaceholder = resource.GetString("SearchPlaceholder");
    var info = resource.GetString("Info");
    var emptyTable = resource.GetString("EmptyTable");
    var loadingRecords = resource.GetString("LoadingRecords");
    var processing = resource.GetString("Processing");
    var zeroRecords = resource.GetString("ZeroRecords");
    var infoEmpty = resource.GetString("InfoEmpty");
    var infoFiltered = resource.GetString("InfoFiltered");
    var claimsIdentity = User.Identity as System.Security.Claims.ClaimsIdentity;
    var userFirstName = "";
    var btnActionName = "";
    var hidden = "";
    var multipleFactorText = Localizer["MultipleFactorText"];
    var rolesUsr = "";
    if (claimsIdentity != null)
    {
        var name = claimsIdentity.Name;
        if (name != null)
        {
            var FullName = UserManager.FindByNameAsync(name);
            userFirstName = FullName.Result.NombreUsuario;
            rolesUsr = FullName.Result.Rol;
        }
    }
    var difSignature = Convert.ToDateTime(Config["DayChangeNewSignature"]);
    var flagChange =  Model.CreatedDate.Value >= difSignature;
}

<div class="table-responsive">
    <table id="table-5" class="table table-striped table-bordered" style="width:120%;">
        <thead>
            <tr>
                <th colspan="12">Tabla 5: Variables de control en proceso</th>
            </tr>
            <tr>
                <th rowspan="2" scope="col" width="200px">Área</th>
                <th rowspan="2" scope="col" width="200px">Etapa de proceso / Equipo utilizado</th>
                <th rowspan="2" scope="col" width="200px">Variable de control de proceso / Rango operacional establecido</th>
                <th rowspan="2" scope="col" width="150px">Gráficas de la variable de control de proceso</th>
                <th rowspan="2" scope="col" width="120px">Valor máximo</th>
                <th rowspan="2" scope="col" width="120px">Valor mínimo</th>
                <th rowspan="2" scope="col" width="120px">Valor promedio</th>
                <th rowspan="2" scope="col" width="150px">Cumple</th>
                <th colspan="2" scope="col" width="250px">Informe de desviación</th>
                <th rowspan="2" scope="col" width="200px">Revisado por</th>
                <th rowspan="2" scope="col" width="200px">Observaciones</th>
            </tr>
            <tr>
                <th scope="col" width="100px">Folio</th>
                <th scope="col" width="150px">Observaciones</th>
            </tr>
        </thead>
        <tbody>
            @if (Model.ControlVariables != null)
            {
                int controlVariablesIndex = 0;
                @foreach (var entry in Model.ControlVariables)
                {
                    bool read;
                    <tr>
                        <td hidden="hidden" id="ControlVariablesId@(controlVariablesIndex)">@entry.Id</td>
                        <td hidden="hidden" id="ControlVariablesChartPath@(controlVariablesIndex)">@entry.VariableCode</td>
                        <td>
                            <input asp-for="@entry.Area" id="ControlVariablesArea@(controlVariablesIndex)" hidden />
                            <label>@entry.Area</label>
                            <input id="VariableCode@(controlVariablesIndex)" hidden readonly asp-for="@entry.VariableCode" />
                        </td>
                        <td>
                            <input asp-for="@entry.Description" id="ControlVariablesDescription@(controlVariablesIndex)" hidden />
                            <label>@entry.Description</label>
                        </td>
                        <td>
                            <input asp-for="@entry.Variable" id="ControlVariablesVariable@(controlVariablesIndex)" hidden />
                            <input asp-for="@entry.Specification" id="ControlVariablesSpecification@(controlVariablesIndex)" hidden />
                            <label id="DisplayNameVariable@(controlVariablesIndex)">@entry.DisplayName</label>
                        </td>
                        <td>
                            @{
                                var tittle = "'Variable de control de proceso: " + entry.DisplayName + "'";
                            }

                            @if (!String.IsNullOrEmpty(entry.Historical))
                            {
                                read = true;
                                <button class='btn btn' type="button" id="BtngraphsVariables@(controlVariablesIndex)" style="background-color:transparent; margin: 20px auto;" onclick="showHistoricalGraph(@entry.Historical,@entry.LowLimit,@entry.TopLimit, @tittle);return false;">
                                    <i class="fa fa-chart-bar"></i> Histórico
                                </button>

                            }
                            else
                            {
                                read = false;
                                <label>Histórico No disponible</label>

                            }
                            <input id="LowLimitVariable@(controlVariablesIndex)" asp-for="@entry.LowLimit" hidden readonly />
                            <input id="TopLimitVariable@(controlVariablesIndex)" asp-for="@entry.TopLimit" hidden readonly />
                        </td>
                        <td>
                            <input asp-for="@entry.MaxValue" readonly="@read"  onchange="validateInputsStep3()" id="ControlVariablesMaxValue@(controlVariablesIndex)"  oninput="this.value = this.value.replace(/(?!^-)[^0-9.]/g, '').replace(/(\..*)\./g, '$1');" class="form-control" />
                        </td>
                        <td>
                            <input asp-for="@entry.MinValue" readonly="@read"  onchange="validateInputsStep3()" id="ControlVariablesMinValue@(controlVariablesIndex)" oninput="this.value = this.value.replace(/(?!^-)[^0-9.]/g, '').replace(/(\..*)\./g, '$1');" class="form-control" />
                        </td>
                        <td>
                            <input asp-for="@entry.AvgValue" readonly="@read"  onchange="validateInputsStep3()" id="ControlVariablesAvgValue@(controlVariablesIndex)" oninput="this.value = this.value.replace(/(?!^-)[^0-9.]/g, '').replace(/(\..*)\./g, '$1');" class="form-control" />
                        </td>
                        <td align="justify">
                            <div id="labelRequiredTable5@(controlVariablesIndex)" class="row divRequired" hidden>*</div>
                            <input type="checkbox" class="yes-no-variable-selector" id="ControlVariablesCheckTrue@(controlVariablesIndex)"
                                   form-control-lg
                                   data-linde-control-value="true"
                                   data-linde-control-group="ControlVariables"
                                   data-linde-control-id="@(controlVariablesIndex)"
                                   onchange="verifyVariable(this, 'ControlVariables', @controlVariablesIndex, 'Table5', true, 'ControlVariablesDeviationReportNotes', 'ControlVariablesDeviationReportFolio')" />

                            <label>Cumple</label> <br />
                            <input type="checkbox" class="yes-no-variable-selector" id="ControlVariablesCheckFalse@(controlVariablesIndex)"
                                   form-control-lg
                                   data-linde-control-value="false"
                                   data-linde-control-group="ControlVariables"
                                   data-linde-control-id="@(controlVariablesIndex)"
                                   onchange="verifyVariable(this, 'ControlVariables', @controlVariablesIndex, 'Table5')" />
                            <label>No cumple</label>
                            <input asp-for="@entry.InCompliance" id="ControlVariablesInCompliance@(controlVariablesIndex)" hidden class="form-control" />
                        </td>
                        <td>
                            <input asp-for="@entry.DeviationReport.Folio" id="ControlVariablesDeviationReportFolio@(controlVariablesIndex)"  onchange="validateInputsStep3()" disabled class="form-control" />
                        </td>
                        <td>
                            <input asp-for="@entry.DeviationReport.Notes" id="ControlVariablesDeviationReportNotes@(controlVariablesIndex)"  onchange="validateInputsStep3()" disabled class="form-control" />
                        </td>
                        <td>
                            <input class="form-control text-center" asp-for="@entry.ReviewedBy" id="ControlVariablesReviewedBy@(controlVariablesIndex)" hidden="hidden" />
                            <input class="form-control text-center" asp-for="@entry.ReviewedDate" id="ControlVariablesReviewedDate@(controlVariablesIndex)" hidden="hidden" />
                            <div id="ControlVariablesReviewedSignature@(controlVariablesIndex)"></div>
                        </td>
                        <td>
                            <input asp-for="@entry.Notes" id="ControlNotes@(controlVariablesIndex)" class="form-control" />
                        </td>
                    </tr>
                    controlVariablesIndex++;
                }
            }
        </tbody>
    </table>
    @if (flagChange)
    {
        <button class="btn btn btn-inverse" id="BtnTableFive" type="button" onclick="uploadFiles('@Model.Id', '@LiberacionProductoWeb.Models.ProductionOrderViewModels.ProductionOrderCustomersFilesType.TableFive.Value')" style="margin-top:10px;margin-bottom:10px;">
            <i class="fa fa-save"></i> Subir archivo
        </button>
        <div class="table-responsive">
        <table id="table-5-customers-Upload" class="table table-striped table-bordered" height="40px">
            <thead>
                <tr>
                    <th>Nombre del archivo</th>
                    <th>Eliminación</th>
                </tr>
            </thead>
            <tbody>
                @{
                    int customersUploadTableFiveIndex = 0;
                }
                @if (Model.ProductionOrderCustomersFilesViewModel != null)
                {
                    @foreach (var entry in Model.ProductionOrderCustomersFilesViewModel.Where(x => x.Type.Equals(ProductionOrderCustomersFilesType.TableFive.Value)))
                    {
                        <tr id="CustomersTableFiveFilesId-@(customersUploadTableFiveIndex)-@entry.Id">
                            <td>
                                <a href="/ProductionOrder/DownloadFileCustomer?FileName=@entry.FileName" target="_blank">@entry.FileNameOrigin</a>
                            <td>
                                    @if (@entry.State.HasValue && @entry.State == true)
                                    {
                                    <button class="btn btn window-close" type="button" style="background-color:transparent"  onclick="DeleteCustomerFiles(@customersUploadTableFiveIndex,@entry.Id, '@entry.FileName','@LiberacionProductoWeb.Models.ProductionOrderViewModels.ProductionOrderCustomersFilesType.TableFive.Value')"  id="LblActive-@(customersUploadTableFiveIndex)-@entry.Id">Eliminar</button>
                                    <br />
                                    }
                                    else if (@entry.State.HasValue && @entry.State == false)
                                    {
                                    <label id="LblDefuse@(customersUploadTableFiveIndex)-@entry.FileName">Eliminado</label>
                                    }
                            </td>
                        </tr>
                        customersUploadTableFiveIndex++;
                    }
                }
            </tbody>
        </table>
    </div>
    }
  
</div>
<div class="table-responsive">
    <table id="table-6" class="table table-striped table-bordered" style="width:120%;">
        <thead>
            <tr>
                <th colspan="12">Tabla 6: Parámetros críticos de proceso</th>
            </tr>
            <tr>
                <th rowspan="2" scope="col" width="200px">Área</th>
                <th rowspan="2" scope="col" width="200px">Etapa de proceso / Equipo utilizado</th>
                <th rowspan="2" scope="col" width="200px">Parámetro crítico de proceso / Rango operacional establecido</th>
                <th rowspan="2" scope="col" width="150px">Gráficas del parámetro crítico de proceso</th>
                <th rowspan="2" scope="col" width="120px">Valor máximo</th>
                <th rowspan="2" scope="col" width="120px">Valor mínimo</th>
                <th rowspan="2" scope="col" width="120px">Valor promedio</th>
                <th rowspan="2" scope="col" width="150px">Cumple</th>
                <th colspan="2" scope="col" width="250px">Informe de desviación</th>
                <th rowspan="2" scope="col" width="200px">Revisado por</th>
                <th rowspan="2" scope="col" width="300px">Observaciones</th>

            </tr>
            <tr>
                <th scope="col" width="100px">Folio</th>
                <th scope="col" width="150px">Observaciones</th>
            </tr>
        </thead>
        <tbody>
            @if (Model.CriticalParameters != null)
            {
                int criticalParametersIndex = 0;
                @foreach (var entry in Model.CriticalParameters)
                {
                    bool read;
                    <tr>
                        <td hidden="hidden" id="CriticalParametersId@(criticalParametersIndex)">@entry.Id</td>
                        <td hidden="hidden" id="CriticalParametersChartPath@(criticalParametersIndex)">@entry.VariableCode</td>
                        <td>
                            <input asp-for="@entry.Area" id="CriticalParametersArea@(criticalParametersIndex)" hidden />
                            <label>@entry.Area</label>
                            <input id="VariableCriticalCode@(criticalParametersIndex)" hidden readonly asp-for="@entry.VariableCode" />
                        </td>
                        <td>
                            <input asp-for="@entry.Description" id="CriticalParametersDescription@(criticalParametersIndex)" hidden />
                            <label>@entry.Description</label>
                        </td>
                        <td>
                            <input asp-for="@entry.Parameter" id="CriticalParametersParameter@(criticalParametersIndex)" hidden />
                            <input asp-for="@entry.Specification" id="CriticalParametersSpecification@(criticalParametersIndex)" hidden />
                            <label id="DisplayNameCritical@(criticalParametersIndex)">@entry.DisplayName</label>
                        </td>
                        <td>
                            @{
                                var tittle = "'Parámetro critico de proceso: " + entry.DisplayName + "'";
                            }
                            @if (!String.IsNullOrEmpty(entry.Historical))
                            {
                                read = true;
                                <button class='btn btn' type="button"  id="BtngraphsCritical@(criticalParametersIndex)" style="background-color:transparent; margin: 20px auto;" onclick="showHistoricalGraph(@entry.Historical,@entry.LowLimit,@entry.TopLimit, @tittle);return false;">
                                    <i class="fa fa-chart-bar"></i> Histórico
                                </button>
                            }
                            else
                            {
                                read = false;
                                <label>Histórico No disponible</label>
                            }
                            <input id="LowLimitCritical@(criticalParametersIndex)" asp-for="@entry.LowLimit" hidden readonly />
                            <input id="TopLimitCritical@(criticalParametersIndex)" asp-for="@entry.TopLimit" hidden readonly />
                        </td>
                        <td>
                            <input asp-for="@entry.MaxValue"  onchange="validateInputsStep3()" readonly="@read" id="CriticalParametersMaxValue@(criticalParametersIndex)" oninput="this.value = this.value.replace(/(?!^-)[^0-9.]/g, '').replace(/(\..*)\./g, '$1');" class="form-control" />
                        </td>
                        <td>
                            <input asp-for="@entry.MinValue"  onchange="validateInputsStep3()" readonly="@read" id="CriticalParametersMinValue@(criticalParametersIndex)" oninput="this.value = this.value.replace(/(?!^-)[^0-9.]/g, '').replace(/(\..*)\./g, '$1');" class="form-control" />
                        </td>
                        <td>
                            <input asp-for="@entry.AvgValue"  onchange="validateInputsStep3()" readonly="@read" id="CriticalParametersAvgValue@(criticalParametersIndex)" oninput="this.value = this.value.replace(/(?!^-)[^0-9.]/g, '').replace(/(\..*)\./g, '$1');" class="form-control" />
                        </td>
                        <td align="justify">
                            <div id="labelRequiredTable6@(criticalParametersIndex)" class="row divRequired" hidden>*</div>
                            <input type="checkbox" class="yes-no-variable-selector" id="CriticalParametersCheckTrue@(criticalParametersIndex)"
                                   form-control-lg
                                   data-linde-control-value="true"
                                   data-linde-control-group="CriticalParameters"
                                   data-linde-control-id="@(criticalParametersIndex)"
                                   onchange="verifyVariable(this, 'CriticalParameters', @criticalParametersIndex, 'Table6', true, 'CriticalParametersDeviationReportNotes', 'CriticalParametersDeviationReportFolio')" />
                            <label>Cumple</label><br />
                            <input type="checkbox" class="yes-no-variable-selector" id="CriticalParametersCheckFalse@(criticalParametersIndex)"
                                   form-control-lg
                                   data-linde-control-value="false"
                                   data-linde-control-group="CriticalParameters"
                                   data-linde-control-id="@(criticalParametersIndex)"
                                   onchange="verifyVariable(this, 'CriticalParameters', @criticalParametersIndex, 'Table6')" />
                            <label>No cumple</label>
                            <input asp-for="@entry.InCompliance" id="CriticalParametersInCompliance@(criticalParametersIndex)" hidden class="form-control" />
                        </td>
                        <td>
                            <input asp-for="@entry.DeviationReport.Folio"  onchange="validateInputsStep3()" id="CriticalParametersDeviationReportFolio@(criticalParametersIndex)" disabled class="form-control" />
                        </td>
                        <td>
                            <input asp-for="@entry.DeviationReport.Notes"  onchange="validateInputsStep3()" id="CriticalParametersDeviationReportNotes@(criticalParametersIndex)" disabled class="form-control" />
                        </td>
                        <td>
                            <input class="form-control text-center" asp-for="@entry.ReviewedBy" id="CriticalParametersReviewedBy@(criticalParametersIndex)" hidden="hidden" />
                            <input class="form-control text-center" asp-for="@entry.ReviewedDate" id="CriticalParametersReviewedDate@(criticalParametersIndex)" hidden="hidden" />
                            <div id="CriticalParametersReviewedSignature@(criticalParametersIndex)"></div>
                        </td>
                        <td>
                            <input asp-for="@entry.Notes" id="CriticalParametersNotes@(criticalParametersIndex)" class="form-control" />
                        </td>
                    </tr>
                    criticalParametersIndex++;
                }
            }
        </tbody>
    </table>
    @if (flagChange)
    {
        <button class="btn btn btn-inverse" id="BtnTableSix" type="button" onclick="uploadFiles('@Model.Id', '@LiberacionProductoWeb.Models.ProductionOrderViewModels.ProductionOrderCustomersFilesType.TableSix.Value')" style="margin-top:10px;margin-bottom:10px;">
            <i class="fa fa-save"></i> Subir archivo
        </button>
        <div class="table-responsive">
            <table id="table-6-customers-Upload" class="table table-striped table-bordered" height="40px">
                <thead>
                    <tr>
                        <th>Nombre del archivo</th>
                        <th>Eliminación</th>
                    </tr>
                </thead>
                <tbody>
                    @{
                        int customersUploadtableSixIndex = 0;
                    }
                    @if (Model.ProductionOrderCustomersFilesViewModel != null)
                    {
                        @foreach (var entry in Model.ProductionOrderCustomersFilesViewModel.Where(x => x.Type.Equals(ProductionOrderCustomersFilesType.TableSix.Value)))
                        {
                            <tr id="CustomersTableSixFilesId-@(customersUploadtableSixIndex)-@entry.Id">
                                <td>
                                    <a href="/ProductionOrder/DownloadFileCustomer?FileName=@entry.FileName" target="_blank">@entry.FileNameOrigin</a>
                                <td>
                                        @if (@entry.State.HasValue && @entry.State == true)
                                        {
                                        <button class="btn btn window-close" type="button" style="background-color:transparent" onclick="DeleteCustomerFiles(@customersUploadtableSixIndex,@entry.Id, '@entry.FileName','@LiberacionProductoWeb.Models.ProductionOrderViewModels.ProductionOrderCustomersFilesType.TableSix.Value')" class="fa fa-window-close" id="LblActive-@(customersUploadtableSixIndex)-@entry.Id">Eliminar</button>
                                        <br />
                                        }
                                        else if (@entry.State.HasValue && @entry.State == false)
                                        {
                                        <label id="LblDefuse@(customersUploadtableSixIndex)-@entry.FileName">Eliminado</label>
                                        }
                                </td>
                            </tr>
                            customersUploadtableSixIndex++;
                        }
                    }
                </tbody>
            </table>
        </div>
    }
</div>